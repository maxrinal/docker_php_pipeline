// Uses Declarative syntax to run commands inside a container.
pipeline {
    agent {
        kubernetes {
            // Rather than inline YAML, in a multibranch Pipeline you could use: yamlFile 'jenkins-pod.yaml'
            // Or, to avoid YAML:
            // containerTemplate {
            //     name 'shell'
            //     image 'ubuntu'
            //     command 'sleep'
            //     args 'infinity'
            // }
            yaml '''
apiVersion: v1
kind: Pod
spec:
  securityContext:
    fsGroup: 1000
  containers:
  - name: shell
    image: alpine
    command:
    - sleep
    args:
    - inf

  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command:
    - /busybox/cat
    tty: true
    volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
  volumes:
  - name: kaniko-secret
    projected:
      sources:
      - secret:
          name: ghcr-creds
          items:
            - key: .dockerconfigjson
              path: config.json
        
# kubectl -n jenkins-jobs create secret docker-registry ghcr-creds --docker-username=${username} --docker-password=${token} --docker-server=ghcr.io --docker-email=asdf@asdf.com
'''
            // Can also wrap individual steps:
            // container('shell') {
            //     sh 'hostname'
            // }
            defaultContainer 'shell'
        }
    }
    environment {
        IMAGE_REPO = "ghcr.io/maxrinal"
        IMAGE_NAME = "alpine-apache-php"
        IMAGE_TAG  = "${branchName}-${env.GIT_COMMIT[0..6]}"
    }

    stages {
        stage('Build'){
            steps {
                container(name: 'kaniko', shell: '/busybox/sh') {
                    sh 'pwd'
                    sh """
                    #!/busybox/sh 
                    /kaniko/executor --dockerfile Dockerfile --context `pwd`/app_files --verbosity debug --insecure --skip-tls-verify --destination ${IMAGE_REPO}/${IMAGE_NAME}:${IMAGE_TAG} --destination ${IMAGE_REPO}/${IMAGE_NAME}:latest
                    # /kaniko/executor --dockerfile Dockerfile --context `pwd`/app_files --verbosity debug --insecure --skip-tls-verify --no-push
                    """
                }
            }
        }
    }
}

